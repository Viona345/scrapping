# -*- coding: utf-8 -*-
"""scrapping.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XoT4f-MIp0TGX3xUZhoP2NGaWXYYUV-0
"""

import requests
from bs4 import BeautifulSoup
from csv import writer

# Daftar URL film yang ingin diambil datanya
urls = [ "https://www.imdb.com/title/tt0111161/",  # The Shawshank Redemption
    "https://www.imdb.com/title/tt0068646/",  # The Godfather
    "https://www.imdb.com/title/tt0071562/",  # The Godfather: Part II
    "https://www.imdb.com/title/tt0468569/",  # The Dark Knight
    "https://www.imdb.com/title/tt0050083/",  # 12 Angry Men
    "https://www.imdb.com/title/tt15435876/" ]  # The Penguin

# Menyimpan data ke file CSV
with open('daftar_film.csv', 'w', newline='', encoding='utf-8') as csv_file:
    csv_writer = writer(csv_file)
    # Membuat header
    csv_writer.writerow(["Judul", "Rating", "Genre"])

    for url in urls:
        # Mengirim permintaan HTTP ke halaman utama untuk mendapatkan data
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        res = requests.get(url, headers=headers)

        # Memastikan permintaan berhasil
        if res.status_code == 200:
            # Menggunakan BeautifulSoup untuk mem-parsing HTML
            html = BeautifulSoup(res.content, 'html.parser')
         # Memastikan permintaan berhasil
        if res.status_code == 200:
            # Menggunakan BeautifulSoup untuk mem-parsing HTML
            html = BeautifulSoup(res.content, 'html.parser')

            # Mencari judul film
            title_tag = html.find('h1')
            title = title_tag.text.strip() if title_tag else 'Judul tidak ditemukan'  # Judul film

            # Mencari rating di hero rating bar
            rating = "Rating tidak ditemukan"
            rating_tag = html.find('div', {'data-testid': 'hero-rating-bar__aggregate-rating__score'})
            if rating_tag:
                rating_span = rating_tag.find('span')
                rating = rating_span.text.strip() if rating_span else 'Rating tidak ditemukan'

            # Mencari genre film
            genre_list = []
            genre_tag = html.find('div', {'data-testid': 'interests'})
            if genre_tag:
                genre_list = [genre.text.strip() for genre in genre_tag.find_all('span')]
            genre = ", ".join(genre_list) if genre_list else "Genre tidak ditemukan"
             # Menulis data film
            csv_writer.writerow([title, rating, genre])
            print(f"Data film '{title}' dengan rating '{rating}' dan genre '{genre}' telah ditambahkan ke 'daftar_film.csv'.")
        else:
            print(f"Error: {res.status_code} saat mengakses {url}")

print("Scrapping telah selesai dilakukan!")